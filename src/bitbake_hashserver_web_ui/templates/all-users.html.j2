<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="./static/bootstrap-5.3.2-dist/css/bootstrap.min.css"/>
        <link rel="stylesheet" href="./static/common.css"/>
        <title>Hash Equivalence Server User Management</title>
        <script src="./static/common.js"></script>
        <script>
            const ALL_PERMS = ['{{ all_perms | join("', '") | safe }}'];
            const ADMIN_USER = '{{ admin_user }}';
            const CURRENT_USER = '{{ user["username"] }}';

            function get_perm_checkbox(prefix, perm) {
                const id = `${prefix}-${perm}`;
                let cb = document.getElementById(id);
                if (!cb) {
                    console.log("Cannot find checkbox %s", id);
                }
                return cb;
            }

            function get_perms(prefix) {
                let perms = [];
                for (let p in ALL_PERMS) {
                    let cb = get_perm_checkbox(prefix, ALL_PERMS[p]);
                    if (cb.checked) {
                        perms.push(ALL_PERMS[p]);
                    }
                }
                if (perms.length == 0) {
                    return ["@none"];
                }
                return perms;
            }

            function on_update_user_perms_click(username) {
                user_set_perms(username, get_perms(username), function (data) {
                    if ("error" in data) {
                        live_alert("danger", data["error"]);
                    } else {
                        const username = data["username"];
                        const user_perms = data["permissions"];
                        for (let p in ALL_PERMS) {
                            let cb = get_perm_checkbox(username, ALL_PERMS[p]);
                            if (cb) {
                                cb.checked = user_perms.includes(ALL_PERMS[p]);
                            }
                        }
                    }
                });
            }

            function on_delete_click(event) {
                const username = event.target.getAttribute("data-bs-username");
                user_delete(username, function (data) {
                    if ("error" in data) {
                        live_alert("danger", data["error"]);
                        return;
                    }

                    live_alert("success", `User <span class="username">${escapeHTML(username)}</span> deleted`);
                    update_user_table();
                });
            }

            function show_token_alert(username, token) {
                live_alert("success", [
                    `<p>New token for user <span class="username">${escapeHTML(username)}</span> is:</p>`,
                    `<p><span class="token">${escapeHTML(token)}</span></p>`
                ].join(""));
            }

            function on_reset_click(event) {
                const username = event.target.getAttribute("data-bs-username");
                user_reset_token(username, function (data) {
                    if ("error" in data) {
                        live_alert("danger", data["error"]);
                        return;
                    }

                    show_token_alert(data["username"], data["token"]);
                });
            }

            function on_create_new_user_click() {
                const username = document.getElementById("new-user-name").value;
                const perms = get_perms("new-user");
                if (!username) {
                    return;
                }

                user_create(username, perms, function (data) {
                    if ("error" in data) {
                        live_alert("danger", data["error"]);
                    } else {
                        show_token_alert(data["username"], data["token"]);
                        update_user_table();
                    }
                });
            }

            function update_user_table() {
                get_all_users(function (data) {
                    if ("error" in data) {
                        live_alert("danger", data["error"]);
                        return;
                    }

                    const users = data.users.sort(function (a, b) {
                        return a.username.localeCompare(b.username);
                    });

                    const table = document.getElementById("user-table");
                    let tbody = document.createElement("tbody");

                    for (let idx in users) {
                        const user = users[idx];
                        let row = tbody.insertRow();

                        row.insertCell().innerHTML = `<span class="username">${escapeHTML(user.username)}</span>`;

                        for (let p in ALL_PERMS) {
                            let text = [
                                '<div class="form-check form-switch">',
                                '<input class="form-check-input" role="switch" type="checkbox"',
                                `   id="${user.username}-${ALL_PERMS[p]}"`,
                                `   onclick='on_update_user_perms_click("${user.username}")'`,
                            ];
                            if ( user.username == ADMIN_USER || ( ALL_PERMS[p] == "@user-admin" && user.username == CURRENT_USER ) ) {
                                text.push("disabled");
                            }
                            if ( user.permissions.includes(ALL_PERMS[p]) ) {
                                text.push("checked");
                            }
                            text.push("/></div>");

                            row.insertCell().innerHTML = text.join(" ");
                        }

                        let reset_text = [
                            '<button',
                            '   type"button"',
                            '   class="btn btn-warning"',
                            '   data-bs-toggle="modal"',
                            '   data-bs-target="#resetTokenConfirmModal"',
                            `   data-bs-username="${user.username}"`,
                        ];
                        if ( user.username == ADMIN_USER) {
                            reset_text.push("disabled");
                        }
                        reset_text.push(">Reset Token</button>");

                        row.insertCell().innerHTML = reset_text.join(" ");

                        let delete_text = [
                            '<button',
                            '   type"button"',
                            '   class="btn btn-danger"',
                            '   data-bs-toggle="modal"',
                            '   data-bs-target="#deleteConfirmModal"',
                            `   data-bs-username="${user.username}"`,
                        ];
                        if ( user.username == ADMIN_USER || user.username == CURRENT_USER ) {
                            delete_text.push("disabled");
                        }
                        delete_text.push(">Delete</button>");

                        row.insertCell().innerHTML = delete_text.join(" ");
                    }

                    table.replaceChild(tbody, table.tBodies[0]);
                });

            }

            function on_load() {
                document.getElementById("deleteConfirmModal").addEventListener("show.bs.modal", on_confirm_dialog_show);
                document.getElementById("resetTokenConfirmModal").addEventListener("show.bs.modal", on_confirm_dialog_show);

                update_user_table();
            }
        </script>
    </head>
    <body onload='on_load()'>
        {% include "nav-bar.html.j2" %}
        <div class="container">
            <h1>User Administration</h1>
        </div>
        <div class="container">
            <h3>Users</h3>
            <table class="table" id="user-table">
                <thead>
                    <tr>
                        <th rowspan="2">Username</th>
                        <th colspan="{{ all_perms | length }}">Permissions</th>
                        <th rowspan="2"/>
                        <th rowspan="2"/>
                    </tr>
                    <tr>
                        {% for perm in all_perms %}
                        <th> {{ perm }} </th>
                        {% endfor %}
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <div class="container">
            <h3>Add new user</h3>
        </div>
        <div class="container">
            <div class="input-group mb-3">
                <span class="input-group-text">New username</span>
                <input class="form-control" id="new-user-name" autocomplete="off"/>
            </div>
        </div>
        <div class="container">
            Permissions:
            {% for perm in all_perms %}
            <div class="form-check form-switch">
                <input
                    class="form-check-input"
                    role="switch"
                    type="checkbox"
                    id="new-user-{{ perm }}"
                    {% if perm in default_perms %}checked{% endif %}
                />
                <label class="form-check-label" for="new-user-{{ perm }}"><span class="perm">{{ perm }}</span></label>
            </div>
            {% endfor %}
        </div>
        <div class="container">
            <button class="btn btn-outline-primary" onclick='on_create_new_user_click()'>Create New User</button>
        </div>

        {% include "alert.html.j2" %}

        <!-- Delete confirmation Dialog -->
        <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title">Delete user <span class="username" id="username"></span></h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        This action cannot be undone
                    </div>
                    <div class="modal-footer">
                        <button
                            type="button"
                            class="btn btn-primary"
                            data-bs-dismiss="modal"
                        >Cancel</button>

                        <button
                            type="button"
                            class="btn btn-danger"
                            id="confirm-button"
                            data-bs-dismiss="modal"
                            onclick="on_delete_click(event)"
                        >Delete User</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Reset Token confirmation Dialog -->
        <div class="modal fade" id="resetTokenConfirmModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title">Reset token for <span class="username" id="username"></span></h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        This action cannot be undone
                    </div>
                    <div class="modal-footer">
                        <button
                            type="button"
                            class="btn btn-primary"
                            data-bs-dismiss="modal"
                        >Cancel</button>

                        <button
                            type="button"
                            class="btn btn-warning"
                            id="confirm-button"
                            data-bs-dismiss="modal"
                            onclick="on_reset_click(event)"
                        >Reset Token</button>
                    </div>
                </div>
            </div>
        </div>
        <script src="./static/bootstrap-5.3.2-dist/js/bootstrap.min.js"></script>
    </body>
</html>

